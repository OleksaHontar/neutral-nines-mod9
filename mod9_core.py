def neutral_nines_mod9(n):
    """
    –û–±—á–∏—Å–ª—é—î –∑–∞–ª–∏—à–æ–∫ –ø–æ –º–æ–¥—É–ª—é 9 –¥–ª—è —á–∏—Å–ª–∞ n,
    –≤–∏–∫–ª—é—á–∞—é—á–∏ —Ü–∏—Ñ—Ä–∏ 9, 0 —Ç–∞ –ø–∞—Ä–∏ —Ü–∏—Ñ—Ä, —â–æ –≤ —Å—É–º—ñ –¥–∞—é—Ç—å 9.

    –ê–≤—Ç–æ—Ä: –û–ª–µ–∫—Å—ñ–π –ì–æ–Ω—Ç–∞—Ä
    """

    # –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ —á–∏—Å–ª–æ –Ω–∞ —Å–ø–∏—Å–æ–∫ —Ü–∏—Ñ—Ä
    digits = [int(d) for d in str(abs(n))]

    # –°—Ç–≤–æ—Ä—é—î–º–æ —Å–ø–∏—Å–æ–∫ –¥–ª—è "–∞–∫—Ç–∏–≤–Ω–∏—Ö" —Ü–∏—Ñ—Ä
    active_digits = []

    # –ö–æ–ø—ñ—è –¥–ª—è –ø–æ—à—É–∫—É –ø–∞—Ä
    temp_digits = [d for d in digits if d not in (0, 9)]

    # –ü–æ—à—É–∫ —ñ –≤–∏–∫–ª—é—á–µ–Ω–Ω—è –ø–∞—Ä, —â–æ –¥–∞—é—Ç—å 9
    while temp_digits:
        found_pair = False
        for i in range(len(temp_digits)):
            for j in range(i + 1, len(temp_digits)):
                if temp_digits[i] + temp_digits[j] == 9:
                    a, b = temp_digits[i], temp_digits[j]
                    temp_digits.remove(a)
                    temp_digits.remove(b)
                    found_pair = True
                    break
            if found_pair:
                break
        if not found_pair:
            active_digits.extend(temp_digits)
            break

    # –û–±—á–∏—Å–ª—é—î–º–æ —Å—É–º—É "–∞–∫—Ç–∏–≤–Ω–∏—Ö" —Ü–∏—Ñ—Ä
    total = sum(active_digits)

    # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∑–∞–ª–∏—à–æ–∫ –ø–æ –º–æ–¥—É–ª—é 9
    return total % 9


# üîç –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
if __name__ == "__main__":
    test_numbers = [972045, 123456, 909090, 98172, 999, 0, 1008]
    for num in test_numbers:
        result = neutral_nines_mod9(num)
        print(f"{num} ‚Üí –∑–∞–ª–∏—à–æ–∫ –ø–æ –º–æ–¥—É–ª—é 9 (–±–µ–∑ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∏—Ö): {result}")
